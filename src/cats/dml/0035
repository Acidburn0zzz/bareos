# We do the same thing than the previous query, but we include
# all delta parts. If the file has been deleted, we can have irrelevant parts.
#
# The code that uses results should control the delta sequence with
# the following rules:
# First Delta = 0
# Delta = Previous Delta + 1
#
# If we detect a gap, we can discard further pieces
# If a file starts at 1 instead of 0, the file has been deleted, and further
# pieces are useless.
#
# This control should be reset for each new file
SELECT FileId, Job.JobId AS JobId, FileIndex, File.PathId AS PathId, File.FilenameId AS FilenameId, LStat, MD5, File.DeltaSeq AS
       DeltaSeq, Job.JobTDate AS JobTDate
  FROM Job, File, (
      SELECT MAX(JobTDate) AS JobTDate, PathId, FilenameId, DeltaSeq
        FROM (
            SELECT JobTDate, PathId, FilenameId, DeltaSeq
              FROM File
              JOIN Job
             USING (JobId)
             WHERE File.JobId IN (%s)
             UNION ALL
            SELECT JobTDate, PathId, FilenameId, DeltaSeq
              FROM BaseFiles
              JOIN File
             USING (FileId)
              JOIN Job
                ON (BaseJobId    = Job.JobId)
             WHERE BaseFiles.JobId IN (%s)
             ) AS tmp
       GROUP BY PathId, FilenameId, DeltaSeq
       ) AS T1
 WHERE (
          Job.JobId IN (
         SELECT DISTINCT BaseJobId
           FROM BaseFiles
          WHERE JobId IN (%s)
          )
       OR Job.JobId IN (%s)
       )
   AND T1.JobTDate   = Job.JobTDate
   AND Job.JobId     = File.JobId
   AND T1.PathId     = File.PathId
   AND T1.FilenameId = File.FilenameId
