#!/bin/sh
#
# How it works:
#
# We walk all available queries and create a loadable query file from them.
# If there is a more specific query we use that one (e.g. if there is
# a more specific query in a subdir named the same as the database_type
# given) otherwise we append the default query.
#
if [ $# != 1 ]; then
   echo "Usage: $0 <database_type>"
   exit 1
fi

database_type=$1

#
# See if the query file already exists
#
if [ -f ${database_type}.bdbqf ]; then
   exit 0
fi

#
# Extract the version from version.h
#
eval VERSION=`grep 'VERSION ' ../../include/version.h | grep define | cut -d' ' -f3`
if [ -z "${VERSION}" ]; then
   echo "Failed to extract version from version.h !!!"
   exit 1
fi

#
# Output everything to the queryfile.
#
exec > ${database_type}.bdbqf

echo "(BareosDatabaseBackendQueryFile)"
echo "(version ${VERSION})"
echo "(start)"

cnt=1
while [ 1 ]
do
   key=`printf %04d ${cnt}`

   if [ -f ${key}.${database_type} ]; then
      echo "(${key})"
      cat ${key}.${database_type}
   else
      if [ -f ${key} ]; then
         echo "(${key})"
         cat ${key}
      else
         #
         # Both the specific and generic query doesn't exist.
         # Break the loop we are done.
         #
         break
      fi
   fi
   cnt=`expr ${cnt} + 1`
done

echo "(end)"
exit 0
